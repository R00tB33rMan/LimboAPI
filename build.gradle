//file:noinspection GroovyAssignabilityCheck

plugins {
  id("java")
  id("checkstyle")
  id("com.github.spotbugs").version("6.0.0-rc.1").apply(false)
  id("org.cadixdev.licenser").version("0.6.1").apply(false)
}

allprojects {
  apply(plugin: "checkstyle")
  apply(plugin: "com.github.spotbugs")
  apply(plugin: "org.cadixdev.licenser")

  setGroup("net.elytrium.limboapi")
  setVersion("1.1.18-SNAPSHOT")

  compileJava {
    getOptions().setEncoding("UTF-8")
  }

  java {
    setSourceCompatibility(JavaVersion.VERSION_11)
    setTargetCompatibility(JavaVersion.VERSION_11)
  }

  repositories {
    mavenCentral()
    mavenLocal()

    maven {
      setName("jitpack-repo")
      setUrl("https://jitpack.io")
    }
    maven {
      setName("elytrium-repo")
      setUrl("https://maven.jnngl.me/public/")
    }
    maven {
      setName("papermc-repo")
      setUrl("https://repo.papermc.io/repository/maven-public/")
    }
  }

  checkstyle {
    setToolVersion("10.12.4")
    setConfigFile(file("${this.getRootDir()}/config/checkstyle/checkstyle.xml"))
    setConfigProperties("configDirectory": "${this.getRootDir()}/config/checkstyle")
    setMaxErrors(0)
    setMaxWarnings(0)
  }

  spotbugs {
    setExcludeFilter(file("${this.getRootDir()}/config/spotbugs/suppressions.xml"))
  }

  spotbugsMain {
    reports {
      html {
        getRequired().set(true)
        getOutputLocation().set(file("${this.getBuildDir()}/reports/spotbugs/main/spotbugs.html"))
        setStylesheet("fancy-hist.xsl")
      }
    }
  }
}

String getCurrentShortRevision() {
  OutputStream outputStream = new ByteArrayOutputStream()
  exec {
    if (System.getProperty("os.name").toLowerCase().contains("win")) {
      commandLine("cmd", "/c", "git rev-parse --short HEAD")
    } else {
      commandLine("bash", "-c", "git rev-parse --short HEAD")
    }

    setStandardOutput(outputStream)
  }

  return outputStream.toString().trim()
}
